es3.0 --> es5.0肯定抛弃了某些方法，还有一些新增的方法
现代浏览器，使用的一般都是es3.0+es5.0的新增方法解决的。
但是当es3.0和es5.0产生冲突的时候，使用use strict用es5的方式来解决
'use strict'
es5.0严格模式，那么es3.0和es5.0产生冲突的时候，使用的是es5.0的方法


'use strict' 卸载页面逻辑的最顶端，前面可以有空格，但是不能有逻辑
也可以卸载函数逻辑的最顶端,推荐局部的
为什么使用字符串？
有可能放到很老的浏览器，然后这些浏览器都没有ES5，执行不了啊
区别？
1.不允许时候用arguments.callee,func.caller,arguments不再追踪参数
2.不允许使用with
3.ES5明确指定不允许使用eval，因为会改变作用域链，其实好像约定ES3都不怎么使用
3.变量赋值前，必须声明
  "use strict"
  a=8;//原来似乎全局变量，现在会报错
  var c=d=7;
4.全局调用的函数的this现在是undefined，原来是全局对象
5.函数重复的参数在ES5严格模式是不行的
  "ues strict"
  function(name,name){} 形参相同
6.严格模式禁止以0开头的八机制表示法，另外，ES6已经支持新的语法标准，
  八进制以0o来表示，这样一来就与16进制的0x形成统一的语法格式
7.对象属性的一些操作，以前是flase，现在报错。
  比如删除一个不可配置属性，不可扩展的对象添加属性